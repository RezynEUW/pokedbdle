/* src/components/game/GuessGrid.css */
.guesses-container {
    display: flex;
    flex-direction: column;
    padding: 16px;
    background: rgba(0, 0, 0, 0.45);
    border-radius: 12px;
    backdrop-filter: blur(5px);
    box-shadow: 0 8px 32px rgba(0, 0, 0, 0.3);
}

.column-headers {
    display: grid;
    grid-template-columns: 80px repeat(9, 1fr);
    gap: 8px;
    margin-bottom: 12px;
    padding-bottom: 8px;
    border-bottom: 2px solid rgba(255, 255, 255, 0.1);
}

.header-cell {
    text-align: center;
    font-weight: bold;
    color: rgba(255, 255, 255, 0.85);
    text-transform: uppercase;
    font-size: 0.85rem;
    letter-spacing: 0.5px;
    text-shadow: 0 2px 4px rgba(0, 0, 0, 0.5);
}


.grid-container {
    display: grid;
    grid-template-columns: 80px repeat(9, 1fr);
    gap: 10px;
    align-items: center;
} 

/* Animation base setup */
.grid-container > * {
    opacity: 0;
    transform: perspective(600px) rotateX(-90deg);
    transform-origin: top center;
    animation: flipReveal 0.6s ease forwards;
    backface-visibility: hidden;
}

/* Doubled time between each reveal (0.2s instead of 0.1s) */
.grid-container > *:nth-child(1) { animation-delay: 0s; }
.grid-container > *:nth-child(2) { animation-delay: 0.2s; }
.grid-container > *:nth-child(3) { animation-delay: 0.4s; }
.grid-container > *:nth-child(4) { animation-delay: 0.6s; }
.grid-container > *:nth-child(5) { animation-delay: 0.8s; }
.grid-container > *:nth-child(6) { animation-delay: 1.0s; }
.grid-container > *:nth-child(7) { animation-delay: 1.2s; }
.grid-container > *:nth-child(8) { animation-delay: 1.4s; }
.grid-container > *:nth-child(9) { animation-delay: 1.6s; }
.grid-container > *:nth-child(10) { animation-delay: 1.8s; }

@keyframes flipReveal {
    0% {
        opacity: 0;
        transform: perspective(600px) rotateX(-90deg);
    }
    50% {
        opacity: 0.7;
    }
    100% {
        opacity: 1;
        transform: perspective(600px) rotateX(0deg);
    }
}

.pokemon-sprite {
    position: relative;
    background: rgba(30, 30, 60, 0.0);
    border-radius: 12px;
    display: flex;
    align-items: center;
    justify-content: center;
    box-shadow: 
        inset 0 0 15px rgba(255, 255, 255, 0.0),
        0 5px 15px rgba(0, 0, 0, 0.1);
    padding: 8px;
    transition: transform 0.2s ease;
}

.pokemon-sprite:hover {
    transform: translateY(-3px);
}

.pokemon-sprite img {
    min-width: 100%;
    min-height: 100%;
    object-fit: contain;
    filter: drop-shadow(0 3px 5px rgba(0, 0, 0, 0.4));
}

.guess-number {
    position: absolute;
    left: -32px;
    top: 50%;
    transform: translateY(-50%);
    color: rgba(255, 255, 255, 0.9);
    font-weight: bold;
    font-size: 1.2rem;
    background: rgba(0, 0, 0, 0.3);
    width: 26px;
    height: 26px;
    display: flex;
    align-items: center;
    justify-content: center;
    border-radius: 50%;
    text-shadow: 0 1px 2px rgba(0, 0, 0, 0.7);
}

/* Base stat card styles */
.stat-card {
    display: flex;
    align-items: center;
    justify-content: center;
    text-align: center;
    padding: 12px 8px;
    border-radius: 6px;
    font-weight: 500;
    box-shadow: 
        inset 0 0 8 10px rgba(255, 255, 255, 0.05),
        0 4px 8px rgba(0, 0, 0, 0.25);
    transition: all 0.2s ease;
    position: relative;
    color: rgba(255, 255, 255, 0.95) !important;
    text-shadow: 0 1px 2px rgba(0, 0, 0, 0.5);
}

.stat-card:hover {
    transform: translateY(-2px);
    box-shadow: 
        inset 0 0 100 10px rgba(255, 255, 255, 0.05),
        0 6px 12px rgba(0, 0, 0, 0.35);
}

.type-icons {
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    gap: 6px;
    position: relative;
    z-index: 2;
}

.type-icon {
    width: 103px;
    height: 25px;
    object-fit: contain;
    filter: drop-shadow(0 2px 4px rgba(0, 0, 0, 0.6));
    transition: transform 0.15s ease, filter 0.15s ease;
}

.type-icon:hover {
    transform: scale(1.05);
    filter: drop-shadow(0 3px 8px rgba(0, 0, 0, 0.8)) brightness(1.1);
}

/* Colorblind-friendly card styles with shapes and patterns */
.correct {
    background: radial-gradient(circle, rgba(43, 187, 85, 0.2) 0%, rgba(43, 187, 85, 0.95) 100%);
    color: white !important;
    text-shadow: 0 1px 2px rgba(0, 0, 0, 0.5);
    border: 2px solid rgba(255, 255, 255, 0.8); /* Bright border */
}
.correct::before {
    content: "✓"; /* Checkmark */
    position: absolute;
    top: 4px;
    right: 6px;
    font-size: 16px;
    font-weight: bold;
    color: white;
    opacity: 1;
    text-shadow: 0 1px 3px rgba(0, 0, 0, 0.3);
}

.incorrect {
    background: radial-gradient(circle, rgba(224, 81, 81, 0.3) 0%, rgba(224, 81, 81, 0.95) 100%);
    color: white !important;
    text-shadow: 0 1px 2px rgba(0, 0, 0, 0.5);
    border: 2px none rgba(255, 255, 255, 0.4); /* Dashed border */
}
.incorrect::before {
    content: "✗"; /* X mark */
    position: absolute;
    top: 4px;
    right: 6px;
    font-size: 16px;
    font-weight: bold;
    color: white;
    opacity: 1;
    text-shadow: 0 1px 3px rgba(0, 0, 0, 0.3);
}

.partial {
    background: radial-gradient(circle, rgba(230, 184, 0, 0.2) 0%, rgba(230, 184, 0, 0.95) 100%);
    color: white !important;
    text-shadow: 0 1px 2px rgba(0, 0, 0, 0.5);
    max-width: 136px; /* Fixed width to match container */
    border: 2px dashed rgba(255, 255, 255, 0.6); /* Dotted border */
}
.partial::before {
    content: "≈"; /* Almost equal sign */
    position: absolute;
    top: 0px;
    right: 8px;
    font-size: 20px;
    font-weight: bold;
    color: white;
    opacity: 1;
    text-shadow: 0 1px 3px rgba(0, 0, 0, 0.3);
}

.hint {
    margin-left: 6px;
    font-weight: bold;
    opacity: 0.9;
    color: white !important;
}

/* Enhanced type cards with radial gradients and indicators */
.stat-card.type-card {
    background: transparent;
    box-shadow: none;
    padding: 10px 0;
    position: relative;
    overflow: hidden;
}

/* Type card with radial gradient backgrounds and indicators */
.type-card.correct {
    background: radial-gradient(circle, rgba(43, 187, 85, 0) 0%, rgba(43, 187, 85, 0.95) 100%);
    border: 2px solid rgba(255, 255, 255, 0.8);
}

.type-card.incorrect {
    background: radial-gradient(circle, rgba(224, 81, 81, 0) 0%, rgba(224, 81, 81, 0.95) 100%);
    border: 2px dotted rgba(255, 255, 255, 0.2);
}

.type-card.partial {
    background: radial-gradient(circle, rgba(230, 184, 0, 0) 0%, rgba(230, 184, 0, 0.95) 100%);
    border: 2px dashed rgba(255, 255, 255, 0.6);
    max-width: 140px; /* Fixed width to match container */
}

/* Special treatment for numeric values with arrows */
.stat-card .value-with-arrow {
    display: flex;
    align-items: center;
    justify-content: center;
    gap: 4px;
    margin-right: 18px; /* Make room for the larger indicator symbol */
}

.stat-card .arrow {
    font-size: 1.1em;
}

/* Make grid responsive */
@media (max-width: 768px) {
    .column-headers {
        font-size: 0.7rem;
    }
    
    .grid-container {
        gap: 6px;
    }
    
    .stat-card {
        padding: 8px 4px;
        font-size: 0.85rem;
    }
    
    .type-icon {
        width: 80px;
        height: 20px;
    }
    
    .correct::before,
    .incorrect::before,
    .partial::before {
        font-size: 14px;
        top: 4px;
        right: 4px;
    }
}

/* Add these styles to your GuessGrid.css file */

.abilities-container {
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    gap: 4px;
    width: 100%;
  }
  
  .ability-item {
    text-align: center;
    line-height: 1;
    display: flex;
    align-items: center;
    justify-content: center;
    flex-wrap: wrap;
  }
  
  .ability-separator {
    display: inline-block;
    margin-left: 2px;
  }
  
  /* Make sure the ability card maintains consistent height */
  .stat-card:has(.abilities-container) {
    min-height: 64px;
    display: flex;
    align-items: center;
    justify-content: center;
  } 

  /* Improved header cell styles */
.column-headers {
    display: grid;
    grid-template-columns: 80px repeat(9, 1fr);
    gap: 8px;
    margin-bottom: 12px;
    padding: 8px 0 12px 0;
    border-bottom: 0px dashed rgba(255, 255, 255, 0.15);
    background: rgba(15, 15, 25, 0.3);
    border-radius: 8px 8px 0 0;
}

.header-cell {
    text-align: center;
    font-weight: 700;
    color: rgba(255, 255, 255, 0.9);
    text-transform: uppercase;
    font-size: 0.85rem;
    letter-spacing: 0.5px;
    text-shadow: 0 2px 4px rgba(0, 0, 0, 0.5);
    padding: 4px 0;
    position: relative;
}

.header-cell::after {
    content: '';
    position: absolute;
    bottom: -8px;
    left: 0;
    right: 0;
    height: 2px;
    background: rgba(255, 255, 255, 0.08);
    border-radius: 2px;
}

/* Make sure header text doesn't wrap */
@media (max-width: 1200px) {
    .header-cell {
        font-size: 0.75rem;
        white-space: nowrap;
        overflow: hidden;
        text-overflow: ellipsis;
    }
}

@media (max-width: 768px) {
    .column-headers {
        padding: 6px 0 10px 0;
    }
    
    .header-cell {
        font-size: 0.7rem;
        letter-spacing: 0;
    }
}

/* Improved grid layout with consistent column sizing */
.column-headers,
.grid-container {
  display: grid;
  grid-template-columns: minmax(100px, 1fr) repeat(9, 1fr);
  gap: 8px;
}

/* Make Pokemon header cell equal width to others with proper padding */
.header-cell:first-child {
  min-width: 100px;
  padding: 4 8px;
  text-align: center;
  position: relative;
}

/* Ensure consistent sprite container size */
.pokemon-sprite {
  width: 100%;
  min-width: 100px;
  min-height: 102px;
  padding: 8px;
  display: flex;
  justify-content: center;
  align-items: center;
  box-sizing: border-box;
}

.pokemon-sprite img {
  max-width: 100%;
  object-fit: contain;
}

/* Add responsive adjustments for consistent sizing */
@media (max-width: 768px) {
  .column-headers,
  .grid-container {
    grid-template-columns: minmax(80px, 1fr) repeat(9, 1fr);
  }
  
  .header-cell:first-child {
    min-width: 80px;
  }
  
  .pokemon-sprite {
    min-width: 80px;
  }
}

/* Add to the end of GuessGrid.css */

/* Force white color for guess counter */
.guesses-container .grid-container .pokemon-sprite .guess-counter {
  position: absolute;
  top: 4px;
  left: 4px;
  font-size: 15px;
  font-weight: bold;
  color: rgb(255, 255, 255) !important; /* Using RGB value instead of 'white' */
  opacity: 0.2;
  z-index: 5;
  pointer-events: none;
  text-shadow: 0 1px 2px rgba(0, 0, 0, 0.5);
  /* Reset any potential inheritance */
  background: transparent !important;
  border: none !important;
  display: block !important;
}

/* Clear any pseudo-elements */
.guesses-container .grid-container .pokemon-sprite .guess-counter::before,
.guesses-container .grid-container .pokemon-sprite .guess-counter::after {
  display: none !important;
  content: none !important;
  color: transparent !important;
  background: none !important;
}

/* Responsive adjustment */
@media (max-width: 768px) {
  .guesses-container .grid-container .pokemon-sprite .guess-counter {
    font-size: 13px;
  }
}

/* Column widths */
.grid-container > *:nth-child(2) { /* Type column */
  width: 140px;
}
.grid-container > *:nth-child(9) { /* Egg Groups column */
  width: 110px;
}
.grid-container > *:nth-child(10) { /* Abilities column */
  width: 140px;
}

/* Column header widths */
.column-headers > *:nth-child(2) { /* Type header */
  width: 144px;
}
.column-headers > *:nth-child(9) { /* Egg Groups header */ 
  width: 124px;
}
.column-headers > *:nth-child(10) { /* Abilities header */ 
  width: 160px;
}

.egg-groups-container {
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  gap: 4px;
  width: 100%;
}

.egg-group-item {
  text-align: center;
  line-height: 1;
  display: flex;
  align-items: center;
  justify-content: center;
  flex-wrap: wrap;
}

.egg-group-separator {
  display: inline-block;
  margin-left: 2px;
}

/* Make sure the egg group card maintains consistent height */
.stat-card:has(.egg-groups-container) {
  min-height: 64px;
  display: flex;
  align-items: center;
  justify-content: center;
}

/* Add this to the end of your GuessGrid.css file */

/* Colorblind Mode Styles - Final Version */

/* Base styles for different color modes */
:root {
  /* Default color scheme */
  --correct-bg: radial-gradient(circle, rgba(43, 187, 85, 0.2) 0%, rgba(43, 187, 85, 0.95) 100%);
  --correct-border: 2px solid rgba(255, 255, 255, 0.8);
  
  --partial-bg: radial-gradient(circle, rgba(230, 184, 0, 0.2) 0%, rgba(230, 184, 0, 0.95) 100%);
  --partial-border: 2px dashed rgba(255, 255, 255, 0.6);
  
  --incorrect-bg: radial-gradient(circle, rgba(224, 81, 81, 0.3) 0%, rgba(224, 81, 81, 0.95) 100%);
  --incorrect-border: 2px none rgba(255, 255, 255, 0.4);
}

/* Dyschromatopsia Mode - Blue/Yellow/Gray scheme */
[data-color-mode="dyschromatopsia"] {
  --correct-bg: radial-gradient(circle, rgba(59, 130, 246, 0.2) 0%, rgba(59, 93, 246, 0.95) 100%);
  --correct-border: 2px solid rgba(255, 255, 255, 0.8);
  
  --partial-bg: radial-gradient(circle, rgba(250, 204, 21, 0.2) 0%, rgba(250, 204, 21, 0.95) 100%);
  --partial-border: 2px dashed rgba(255, 255, 255, 0.6);
  
  --incorrect-bg: radial-gradient(circle, rgba(100, 116, 139, 0.3) 0%, rgba(100, 116, 139, 0.55) 100%);
  --incorrect-border: 2px none rgba(255, 255, 255, 0.4);
}

/* Alternate Mode - Purple/Lavender/Burgundy */
[data-color-mode="alternate"] {
  --correct-bg: radial-gradient(circle, rgba(76, 29, 149, 0.3) 0%, rgba(76, 29, 149, 0.95) 100%);
  --correct-border: 2px solid rgba(255, 255, 255, 0.8);
  
  --partial-bg: radial-gradient(circle, rgba(167, 139, 250, 0.3) 0%, rgba(167, 139, 250, 0.75) 100%);
  --partial-border: 2px dashed rgba(255, 255, 255, 0.6);
  
  --incorrect-bg: radial-gradient(circle, rgba(153, 27, 27, 0.3) 0%, rgba(153, 27, 27, 0.95) 100%);
  --incorrect-border: 2px none rgba(255, 255, 255, 0.4);
}

/* Monochrome Mode - Toned down grays */
[data-color-mode="monochrome"] {
  --correct-bg: radial-gradient(circle, rgba(229, 231, 235, 0.9) 0%, rgba(229, 231, 235, 0.95) 100%);
  --correct-border: 2px solid rgba(0, 0, 0, 0.4);
  
  --partial-bg: radial-gradient(circle, rgba(148, 163, 184, 0.6) 0%, rgba(148, 163, 184, 0.95) 100%);
  --partial-border: 2px solid rgba(255, 255, 255, 0.2);
  
  --incorrect-bg: radial-gradient(circle, rgba(51, 65, 85, 0.3) 0%, rgba(51, 65, 85, 0.95) 100%);
  --incorrect-border: 2px solid rgba(255, 255, 255, 0.1);
}

/* Apply CSS Variables to the stat cards */
.stat-card.correct {
  background: var(--correct-bg);
  border: var(--correct-border);
}

.stat-card.partial {
  background: var(--partial-bg);
  border: var(--partial-border);
}

.stat-card.incorrect {
  background: var(--incorrect-bg);
  border: var(--incorrect-border);
}

/* Override type cards to match styles */
.type-card.correct {
  background: var(--correct-bg);
  border: var(--correct-border);
}

.type-card.partial {
  background: var(--partial-bg);
  border: var(--partial-border);
}

.type-card.incorrect {
  background: var(--incorrect-bg);
  border: var(--incorrect-border);
}

/* Text color adjustments for monochrome mode */
[data-color-mode="monochrome"] .stat-card.correct {
  color: #000 !important;
  text-shadow: none !important;
}

[data-color-mode="monochrome"] .stat-card.incorrect {
  color: #fff !important;
}

/* Help modal indicator styling for different modes */
[data-color-mode="dyschromatopsia"] .indicator.correct,
[data-color-mode="alternate"] .indicator.correct,
[data-color-mode="monochrome"] .indicator.correct {
  background: var(--correct-bg);
  border: var(--correct-border);
}

[data-color-mode="dyschromatopsia"] .indicator.partial,
[data-color-mode="alternate"] .indicator.partial,
[data-color-mode="monochrome"] .indicator.partial {
  background: var(--partial-bg);
  border: var(--partial-border);
}

[data-color-mode="dyschromatopsia"] .indicator.incorrect,
[data-color-mode="alternate"] .indicator.incorrect,
[data-color-mode="monochrome"] .indicator.incorrect {
  background: var(--incorrect-bg);
  border: var(--incorrect-border);
}

/* Ensure accessibility mode settings are saved between sessions */
/* This sets a transition for smoother color changes */
.stat-card, .indicator {
  transition: background 0.3s ease, border 0.3s ease, color 0.3s ease;
}

/* Fix text color for hints */
[data-color-mode="monochrome"] .hint {
  color: inherit !important;
}

/* Keep consistent symbols across all modes */
.correct::before,
.partial::before,
.incorrect::before {
  position: absolute;
  top: 4px;
  right: 6px;
  font-size: 16px;
  font-weight: bold;
  opacity: 1;
  text-shadow: 0 1px 3px rgba(0, 0, 0, 0.3);
}

.correct::before {
  content: "✓";
  color: white;
}

.partial::before {
  content: "≈";
  color: white;
}

.incorrect::before {
  content: "✗";
  color: white;
}

/* Fix symbol colors in monochrome mode */
[data-color-mode="monochrome"] .correct::before {
  color: #000;
  text-shadow: 0 1px 2px rgba(255, 255, 255, 0.3);
}

/* Add simple patterns to monochrome mode without being too distracting */
[data-color-mode="monochrome"] .stat-card.correct::after {
  content: "";
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background-image: linear-gradient(45deg, rgba(0, 0, 0, 0.05) 25%, transparent 25%, transparent 50%, rgba(0, 0, 0, 0.05) 50%, rgba(0, 0, 0, 0.05) 75%, transparent 75%, transparent);
  background-size: 10px 10px;
  border-radius: 4px;
  pointer-events: none;
}

[data-color-mode="monochrome"] .stat-card.partial::after {
  content: "";
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background-image: linear-gradient(-45deg, rgba(255, 255, 255, 0.1) 25%, transparent 25%, transparent 50%, rgba(255, 255, 255, 0.1) 50%, rgba(255, 255, 255, 0.1) 75%, transparent 75%, transparent);
  background-size: 10px 10px;
  border-radius: 4px;
  pointer-events: none;
}